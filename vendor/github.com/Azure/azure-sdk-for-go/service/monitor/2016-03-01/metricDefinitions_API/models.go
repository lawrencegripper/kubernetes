package metricdefinitionsapi

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
)

// AggregationType enumerates the values for aggregation type.
type AggregationType string

const (
	// Average specifies the average state for aggregation type.
	Average AggregationType = "Average"
	// Count specifies the count state for aggregation type.
	Count AggregationType = "Count"
	// Maximum specifies the maximum state for aggregation type.
	Maximum AggregationType = "Maximum"
	// Minimum specifies the minimum state for aggregation type.
	Minimum AggregationType = "Minimum"
	// None specifies the none state for aggregation type.
	None AggregationType = "None"
	// Total specifies the total state for aggregation type.
	Total AggregationType = "Total"
)

// Unit enumerates the values for unit.
type Unit string

const (
	// UnitBytes specifies the unit bytes state for unit.
	UnitBytes Unit = "Bytes"
	// UnitBytesPerSecond specifies the unit bytes per second state for unit.
	UnitBytesPerSecond Unit = "BytesPerSecond"
	// UnitCount specifies the unit count state for unit.
	UnitCount Unit = "Count"
	// UnitCountPerSecond specifies the unit count per second state for unit.
	UnitCountPerSecond Unit = "CountPerSecond"
	// UnitMilliSeconds specifies the unit milli seconds state for unit.
	UnitMilliSeconds Unit = "MilliSeconds"
	// UnitPercent specifies the unit percent state for unit.
	UnitPercent Unit = "Percent"
	// UnitSeconds specifies the unit seconds state for unit.
	UnitSeconds Unit = "Seconds"
)

// ErrorResponse is describes the format of Error response.
type ErrorResponse struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// LocalizableString is the localizable string class.
type LocalizableString struct {
	Value          *string `json:"value,omitempty"`
	LocalizedValue *string `json:"localizedValue,omitempty"`
}

// MetricAvailability is metric availability specifies the time grain
// (aggregation interval or frequency) and the retention period for that time
// grain.
type MetricAvailability struct {
	TimeGrain *string `json:"timeGrain,omitempty"`
	Retention *string `json:"retention,omitempty"`
}

// MetricDefinition is metric definition class specifies the metadata for a
// metric.
type MetricDefinition struct {
	ResourceID             *string               `json:"resourceId,omitempty"`
	Name                   *LocalizableString    `json:"name,omitempty"`
	Unit                   Unit                  `json:"unit,omitempty"`
	PrimaryAggregationType AggregationType       `json:"primaryAggregationType,omitempty"`
	MetricAvailabilities   *[]MetricAvailability `json:"metricAvailabilities,omitempty"`
	ID                     *string               `json:"id,omitempty"`
}

// MetricDefinitionCollection is represents collection of metric definitions.
type MetricDefinitionCollection struct {
	autorest.Response `json:"-"`
	Value             *[]MetricDefinition `json:"value,omitempty"`
}
