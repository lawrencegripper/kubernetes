package metricsapi

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
)

// Unit enumerates the values for unit.
type Unit string

const (
	// Bytes specifies the bytes state for unit.
	Bytes Unit = "Bytes"
	// BytesPerSecond specifies the bytes per second state for unit.
	BytesPerSecond Unit = "BytesPerSecond"
	// Count specifies the count state for unit.
	Count Unit = "Count"
	// CountPerSecond specifies the count per second state for unit.
	CountPerSecond Unit = "CountPerSecond"
	// MilliSeconds specifies the milli seconds state for unit.
	MilliSeconds Unit = "MilliSeconds"
	// Percent specifies the percent state for unit.
	Percent Unit = "Percent"
	// Seconds specifies the seconds state for unit.
	Seconds Unit = "Seconds"
)

// ErrorResponse is describes the format of Error response.
type ErrorResponse struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// LocalizableString is the localizable string class.
type LocalizableString struct {
	Value          *string `json:"value,omitempty"`
	LocalizedValue *string `json:"localizedValue,omitempty"`
}

// Metric is a set of metric values in a time range.
type Metric struct {
	ID   *string            `json:"id,omitempty"`
	Type *string            `json:"type,omitempty"`
	Name *LocalizableString `json:"name,omitempty"`
	Unit Unit               `json:"unit,omitempty"`
	Data *[]MetricValue     `json:"data,omitempty"`
}

// MetricCollection is the collection of metric value sets.
type MetricCollection struct {
	autorest.Response `json:"-"`
	Value             *[]Metric `json:"value,omitempty"`
}

// MetricValue is represents a metric value.
type MetricValue struct {
	TimeStamp *date.Time `json:"timeStamp,omitempty"`
	Average   *float64   `json:"average,omitempty"`
	Minimum   *float64   `json:"minimum,omitempty"`
	Maximum   *float64   `json:"maximum,omitempty"`
	Total     *float64   `json:"total,omitempty"`
	Count     *int64     `json:"count,omitempty"`
}
