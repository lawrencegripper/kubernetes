package recommendations

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/satori/uuid"
)

// Channels enumerates the values for channels.
type Channels string

const (
	// All specifies the all state for channels.
	All Channels = "All"
	// API specifies the api state for channels.
	API Channels = "Api"
	// Email specifies the email state for channels.
	Email Channels = "Email"
	// Notification specifies the notification state for channels.
	Notification Channels = "Notification"
	// Webhook specifies the webhook state for channels.
	Webhook Channels = "Webhook"
)

// NotificationLevel enumerates the values for notification level.
type NotificationLevel string

const (
	// Critical specifies the critical state for notification level.
	Critical NotificationLevel = "Critical"
	// Information specifies the information state for notification level.
	Information NotificationLevel = "Information"
	// NonUrgentSuggestion specifies the non urgent suggestion state for
	// notification level.
	NonUrgentSuggestion NotificationLevel = "NonUrgentSuggestion"
	// Warning specifies the warning state for notification level.
	Warning NotificationLevel = "Warning"
)

// ResourceScopeType enumerates the values for resource scope type.
type ResourceScopeType string

const (
	// ServerFarm specifies the server farm state for resource scope type.
	ServerFarm ResourceScopeType = "ServerFarm"
	// Subscription specifies the subscription state for resource scope type.
	Subscription ResourceScopeType = "Subscription"
	// WebSite specifies the web site state for resource scope type.
	WebSite ResourceScopeType = "WebSite"
)

// ListRecommendation is
type ListRecommendation struct {
	autorest.Response `json:"-"`
	Value             *[]Recommendation `json:"value,omitempty"`
}

// Recommendation is represents a recommendation result generated by the
// recommendation engine.
type Recommendation struct {
	CreationTime               *date.Time        `json:"creationTime,omitempty"`
	RecommendationID           *string           `json:"recommendationId,omitempty"`
	ResourceID                 *string           `json:"resourceId,omitempty"`
	ResourceScope              ResourceScopeType `json:"resourceScope,omitempty"`
	RuleName                   *string           `json:"ruleName,omitempty"`
	DisplayName                *string           `json:"displayName,omitempty"`
	Message                    *string           `json:"message,omitempty"`
	Level                      NotificationLevel `json:"level,omitempty"`
	Channels                   Channels          `json:"channels,omitempty"`
	Tags                       *[]string         `json:"tags,omitempty"`
	ActionName                 *string           `json:"actionName,omitempty"`
	StartTime                  *date.Time        `json:"startTime,omitempty"`
	EndTime                    *date.Time        `json:"endTime,omitempty"`
	NextNotificationTime       *date.Time        `json:"nextNotificationTime,omitempty"`
	NotificationExpirationTime *date.Time        `json:"notificationExpirationTime,omitempty"`
	NotifiedTime               *date.Time        `json:"notifiedTime,omitempty"`
	Score                      *float64          `json:"score,omitempty"`
	IsDynamic                  *bool             `json:"isDynamic,omitempty"`
	ExtensionName              *string           `json:"extensionName,omitempty"`
	BladeName                  *string           `json:"bladeName,omitempty"`
	ForwardLink                *string           `json:"forwardLink,omitempty"`
}

// Rule is represents a recommendation rule that the recommendation engine can
// perform.
type Rule struct {
	autorest.Response `json:"-"`
	Name              *string           `json:"name,omitempty"`
	DisplayName       *string           `json:"displayName,omitempty"`
	Message           *string           `json:"message,omitempty"`
	RecommendationID  *uuid.UUID        `json:"recommendationId,omitempty"`
	Description       *string           `json:"description,omitempty"`
	ActionName        *string           `json:"actionName,omitempty"`
	Level             NotificationLevel `json:"level,omitempty"`
	Channels          Channels          `json:"channels,omitempty"`
	Tags              *[]string         `json:"tags,omitempty"`
	IsDynamic         *bool             `json:"isDynamic,omitempty"`
	ExtensionName     *string           `json:"extensionName,omitempty"`
	BladeName         *string           `json:"bladeName,omitempty"`
	ForwardLink       *string           `json:"forwardLink,omitempty"`
}
