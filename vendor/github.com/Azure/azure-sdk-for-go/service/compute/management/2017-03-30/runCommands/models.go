package runcommands

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
	"github.com/Azure/go-autorest/autorest/to"
	"net/http"
)

// OperatingSystemTypes enumerates the values for operating system types.
type OperatingSystemTypes string

const (
	// Linux specifies the linux state for operating system types.
	Linux OperatingSystemTypes = "Linux"
	// Windows specifies the windows state for operating system types.
	Windows OperatingSystemTypes = "Windows"
)

// APIError is api error.
type APIError struct {
	Details    *[]APIErrorBase `json:"details,omitempty"`
	Innererror *InnerError     `json:"innererror,omitempty"`
	Code       *string         `json:"code,omitempty"`
	Target     *string         `json:"target,omitempty"`
	Message    *string         `json:"message,omitempty"`
}

// APIErrorBase is api error base.
type APIErrorBase struct {
	Code    *string `json:"code,omitempty"`
	Target  *string `json:"target,omitempty"`
	Message *string `json:"message,omitempty"`
}

// Document is describes the properties of a Run Command.
type Document struct {
	autorest.Response `json:"-"`
	Schema            *string                `json:"$schema,omitempty"`
	ID                *string                `json:"id,omitempty"`
	OsType            OperatingSystemTypes   `json:"osType,omitempty"`
	Label             *string                `json:"label,omitempty"`
	Description       *string                `json:"description,omitempty"`
	Script            *[]string              `json:"script,omitempty"`
	Parameters        *[]ParameterDefinition `json:"parameters,omitempty"`
}

// DocumentBase is describes the properties of a Run Command metadata.
type DocumentBase struct {
	Schema      *string              `json:"$schema,omitempty"`
	ID          *string              `json:"id,omitempty"`
	OsType      OperatingSystemTypes `json:"osType,omitempty"`
	Label       *string              `json:"label,omitempty"`
	Description *string              `json:"description,omitempty"`
}

// InnerError is inner error details.
type InnerError struct {
	Exceptiontype *string `json:"exceptiontype,omitempty"`
	Errordetail   *string `json:"errordetail,omitempty"`
}

// Input is capture Virtual Machine parameters.
type Input struct {
	CommandID  *string           `json:"commandId,omitempty"`
	Script     *[]string         `json:"script,omitempty"`
	Parameters *[]InputParameter `json:"parameters,omitempty"`
}

// InputParameter is describes the properties of a run command parameter.
type InputParameter struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// ListResult is the List Virtual Machine operation response.
type ListResult struct {
	autorest.Response `json:"-"`
	Value             *[]DocumentBase `json:"value,omitempty"`
	NextLink          *string         `json:"nextLink,omitempty"`
}

// ListResultPreparer prepares a request to retrieve the next set of results. It returns
// nil if no more results exist.
func (client ListResult) ListResultPreparer() (*http.Request, error) {
	if client.NextLink == nil || len(to.String(client.NextLink)) <= 0 {
		return nil, nil
	}
	return autorest.Prepare(&http.Request{},
		autorest.AsJSON(),
		autorest.AsGet(),
		autorest.WithBaseURL(to.String(client.NextLink)))
}

// OperationStatusResponse is operation status response
type OperationStatusResponse struct {
	Name      *string    `json:"name,omitempty"`
	Status    *string    `json:"status,omitempty"`
	StartTime *date.Time `json:"startTime,omitempty"`
	EndTime   *date.Time `json:"endTime,omitempty"`
	Error     *APIError  `json:"error,omitempty"`
}

// ParameterDefinition is describes the properties of a run command parameter.
type ParameterDefinition struct {
	Name         *string `json:"name,omitempty"`
	Type         *string `json:"type,omitempty"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	Required     *bool   `json:"required,omitempty"`
}

// Result is run command operation response.
type Result struct {
	autorest.Response `json:"-"`
	Name              *string    `json:"name,omitempty"`
	Status            *string    `json:"status,omitempty"`
	StartTime         *date.Time `json:"startTime,omitempty"`
	EndTime           *date.Time `json:"endTime,omitempty"`
	Error             *APIError  `json:"error,omitempty"`
	*ResultProperties `json:"properties,omitempty"`
}

// ResultProperties is compute-specific operation properties, including output
type ResultProperties struct {
	Output *map[string]interface{} `json:"output,omitempty"`
}
