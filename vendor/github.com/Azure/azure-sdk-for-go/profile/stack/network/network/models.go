// +build go1.9

// Copyright 2017 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/lawrencegripper/azure-sdk-for-go/tools/profileBuilder

package network

import original "github.com/lawrencegripper/azure-sdk-for-go/service/network/management/2015-05-01-preview/network"

type SubnetsClient = original.SubnetsClient
type ApplicationGatewaysClient = original.ApplicationGatewaysClient
type ExpressRouteCircuitPeeringsClient = original.ExpressRouteCircuitPeeringsClient
type ExpressRouteServiceProvidersClient = original.ExpressRouteServiceProvidersClient
type RoutesClient = original.RoutesClient
type RouteTablesClient = original.RouteTablesClient
type SecurityGroupsClient = original.SecurityGroupsClient

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type ManagementClient = original.ManagementClient
type ExpressRouteCircuitAuthorizationsClient = original.ExpressRouteCircuitAuthorizationsClient
type ExpressRouteCircuitsClient = original.ExpressRouteCircuitsClient
type InterfacesClient = original.InterfacesClient
type LoadBalancersClient = original.LoadBalancersClient
type ApplicationGatewayCookieBasedAffinity = original.ApplicationGatewayCookieBasedAffinity

const (
	Disabled	ApplicationGatewayCookieBasedAffinity	= original.Disabled
	Enabled		ApplicationGatewayCookieBasedAffinity	= original.Enabled
)

type ApplicationGatewayOperationalState = original.ApplicationGatewayOperationalState

const (
	Running		ApplicationGatewayOperationalState	= original.Running
	Starting	ApplicationGatewayOperationalState	= original.Starting
	Stopped		ApplicationGatewayOperationalState	= original.Stopped
	Stopping	ApplicationGatewayOperationalState	= original.Stopping
)

type ApplicationGatewayProtocol = original.ApplicationGatewayProtocol

const (
	HTTP	ApplicationGatewayProtocol	= original.HTTP
	HTTPS	ApplicationGatewayProtocol	= original.HTTPS
)

type ApplicationGatewayRequestRoutingRuleType = original.ApplicationGatewayRequestRoutingRuleType

const (
	Basic ApplicationGatewayRequestRoutingRuleType = original.Basic
)

type ApplicationGatewaySkuName = original.ApplicationGatewaySkuName

const (
	StandardLarge	ApplicationGatewaySkuName	= original.StandardLarge
	StandardMedium	ApplicationGatewaySkuName	= original.StandardMedium
	StandardSmall	ApplicationGatewaySkuName	= original.StandardSmall
)

type ApplicationGatewayTier = original.ApplicationGatewayTier

const (
	Standard ApplicationGatewayTier = original.Standard
)

type AuthorizationUseStatus = original.AuthorizationUseStatus

const (
	Available	AuthorizationUseStatus	= original.Available
	InUse		AuthorizationUseStatus	= original.InUse
)

type ExpressRouteCircuitPeeringAdvertisedPublicPrefixState = original.ExpressRouteCircuitPeeringAdvertisedPublicPrefixState

const (
	Configured		ExpressRouteCircuitPeeringAdvertisedPublicPrefixState	= original.Configured
	Configuring		ExpressRouteCircuitPeeringAdvertisedPublicPrefixState	= original.Configuring
	NotConfigured		ExpressRouteCircuitPeeringAdvertisedPublicPrefixState	= original.NotConfigured
	ValidationNeeded	ExpressRouteCircuitPeeringAdvertisedPublicPrefixState	= original.ValidationNeeded
)

type ExpressRouteCircuitPeeringState = original.ExpressRouteCircuitPeeringState

const (
	ExpressRouteCircuitPeeringStateDisabled	ExpressRouteCircuitPeeringState	= original.ExpressRouteCircuitPeeringStateDisabled
	ExpressRouteCircuitPeeringStateEnabled	ExpressRouteCircuitPeeringState	= original.ExpressRouteCircuitPeeringStateEnabled
)

type ExpressRouteCircuitPeeringType = original.ExpressRouteCircuitPeeringType

const (
	AzurePrivatePeering	ExpressRouteCircuitPeeringType	= original.AzurePrivatePeering
	AzurePublicPeering	ExpressRouteCircuitPeeringType	= original.AzurePublicPeering
	MicrosoftPeering	ExpressRouteCircuitPeeringType	= original.MicrosoftPeering
)

type ExpressRouteCircuitSkuFamily = original.ExpressRouteCircuitSkuFamily

const (
	MeteredData	ExpressRouteCircuitSkuFamily	= original.MeteredData
	UnlimitedData	ExpressRouteCircuitSkuFamily	= original.UnlimitedData
)

type ExpressRouteCircuitSkuTier = original.ExpressRouteCircuitSkuTier

const (
	ExpressRouteCircuitSkuTierPremium	ExpressRouteCircuitSkuTier	= original.ExpressRouteCircuitSkuTierPremium
	ExpressRouteCircuitSkuTierStandard	ExpressRouteCircuitSkuTier	= original.ExpressRouteCircuitSkuTierStandard
)

type IPAllocationMethod = original.IPAllocationMethod

const (
	Dynamic	IPAllocationMethod	= original.Dynamic
	Static	IPAllocationMethod	= original.Static
)

type LoadDistribution = original.LoadDistribution

const (
	Default			LoadDistribution	= original.Default
	SourceIP		LoadDistribution	= original.SourceIP
	SourceIPProtocol	LoadDistribution	= original.SourceIPProtocol
)

type OperationStatus = original.OperationStatus

const (
	Failed		OperationStatus	= original.Failed
	InProgress	OperationStatus	= original.InProgress
	Succeeded	OperationStatus	= original.Succeeded
)

type ProbeProtocol = original.ProbeProtocol

const (
	ProbeProtocolHTTP	ProbeProtocol	= original.ProbeProtocolHTTP
	ProbeProtocolTCP	ProbeProtocol	= original.ProbeProtocolTCP
)

type RouteNextHopType = original.RouteNextHopType

const (
	RouteNextHopTypeInternet		RouteNextHopType	= original.RouteNextHopTypeInternet
	RouteNextHopTypeNone			RouteNextHopType	= original.RouteNextHopTypeNone
	RouteNextHopTypeVirtualAppliance	RouteNextHopType	= original.RouteNextHopTypeVirtualAppliance
	RouteNextHopTypeVirtualNetworkGateway	RouteNextHopType	= original.RouteNextHopTypeVirtualNetworkGateway
	RouteNextHopTypeVnetLocal		RouteNextHopType	= original.RouteNextHopTypeVnetLocal
)

type SecurityRuleAccess = original.SecurityRuleAccess

const (
	Allow	SecurityRuleAccess	= original.Allow
	Deny	SecurityRuleAccess	= original.Deny
)

type SecurityRuleDirection = original.SecurityRuleDirection

const (
	Inbound		SecurityRuleDirection	= original.Inbound
	Outbound	SecurityRuleDirection	= original.Outbound
)

type SecurityRuleProtocol = original.SecurityRuleProtocol

const (
	Asterisk	SecurityRuleProtocol	= original.Asterisk
	TCP		SecurityRuleProtocol	= original.TCP
	UDP		SecurityRuleProtocol	= original.UDP
)

type ServiceProviderProvisioningState = original.ServiceProviderProvisioningState

const (
	Deprovisioning	ServiceProviderProvisioningState	= original.Deprovisioning
	NotProvisioned	ServiceProviderProvisioningState	= original.NotProvisioned
	Provisioned	ServiceProviderProvisioningState	= original.Provisioned
	Provisioning	ServiceProviderProvisioningState	= original.Provisioning
)

type TransportProtocol = original.TransportProtocol

const (
	TransportProtocolTCP	TransportProtocol	= original.TransportProtocolTCP
	TransportProtocolUDP	TransportProtocol	= original.TransportProtocolUDP
)

type VirtualNetworkGatewayConnectionStatus = original.VirtualNetworkGatewayConnectionStatus

const (
	Connected	VirtualNetworkGatewayConnectionStatus	= original.Connected
	Connecting	VirtualNetworkGatewayConnectionStatus	= original.Connecting
	NotConnected	VirtualNetworkGatewayConnectionStatus	= original.NotConnected
	Unknown		VirtualNetworkGatewayConnectionStatus	= original.Unknown
)

type VirtualNetworkGatewayConnectionType = original.VirtualNetworkGatewayConnectionType

const (
	ExpressRoute	VirtualNetworkGatewayConnectionType	= original.ExpressRoute
	IPsec		VirtualNetworkGatewayConnectionType	= original.IPsec
	Vnet2Vnet	VirtualNetworkGatewayConnectionType	= original.Vnet2Vnet
	VPNClient	VirtualNetworkGatewayConnectionType	= original.VPNClient
)

type VirtualNetworkGatewayType = original.VirtualNetworkGatewayType

const (
	VirtualNetworkGatewayTypeExpressRoute	VirtualNetworkGatewayType	= original.VirtualNetworkGatewayTypeExpressRoute
	VirtualNetworkGatewayTypeVpn		VirtualNetworkGatewayType	= original.VirtualNetworkGatewayTypeVpn
)

type VpnType = original.VpnType

const (
	PolicyBased	VpnType	= original.PolicyBased
	RouteBased	VpnType	= original.RouteBased
)

type AddressSpace = original.AddressSpace
type ApplicationGateway = original.ApplicationGateway
type ApplicationGatewayBackendAddress = original.ApplicationGatewayBackendAddress
type ApplicationGatewayBackendAddressPool = original.ApplicationGatewayBackendAddressPool
type ApplicationGatewayBackendAddressPoolPropertiesFormat = original.ApplicationGatewayBackendAddressPoolPropertiesFormat
type ApplicationGatewayBackendHTTPSettings = original.ApplicationGatewayBackendHTTPSettings
type ApplicationGatewayBackendHTTPSettingsPropertiesFormat = original.ApplicationGatewayBackendHTTPSettingsPropertiesFormat
type ApplicationGatewayFrontendIPConfiguration = original.ApplicationGatewayFrontendIPConfiguration
type ApplicationGatewayFrontendIPConfigurationPropertiesFormat = original.ApplicationGatewayFrontendIPConfigurationPropertiesFormat
type ApplicationGatewayFrontendPort = original.ApplicationGatewayFrontendPort
type ApplicationGatewayFrontendPortPropertiesFormat = original.ApplicationGatewayFrontendPortPropertiesFormat
type ApplicationGatewayHTTPListener = original.ApplicationGatewayHTTPListener
type ApplicationGatewayHTTPListenerPropertiesFormat = original.ApplicationGatewayHTTPListenerPropertiesFormat
type ApplicationGatewayIPConfiguration = original.ApplicationGatewayIPConfiguration
type ApplicationGatewayIPConfigurationPropertiesFormat = original.ApplicationGatewayIPConfigurationPropertiesFormat
type ApplicationGatewayListResult = original.ApplicationGatewayListResult
type ApplicationGatewayPropertiesFormat = original.ApplicationGatewayPropertiesFormat
type ApplicationGatewayRequestRoutingRule = original.ApplicationGatewayRequestRoutingRule
type ApplicationGatewayRequestRoutingRulePropertiesFormat = original.ApplicationGatewayRequestRoutingRulePropertiesFormat
type ApplicationGatewaySku = original.ApplicationGatewaySku
type ApplicationGatewaySslCertificate = original.ApplicationGatewaySslCertificate
type ApplicationGatewaySslCertificatePropertiesFormat = original.ApplicationGatewaySslCertificatePropertiesFormat
type AuthorizationListResult = original.AuthorizationListResult
type AuthorizationPropertiesFormat = original.AuthorizationPropertiesFormat
type AzureAsyncOperationResult = original.AzureAsyncOperationResult
type BackendAddressPool = original.BackendAddressPool
type BackendAddressPoolPropertiesFormat = original.BackendAddressPoolPropertiesFormat
type ConnectionResetSharedKey = original.ConnectionResetSharedKey
type ConnectionSharedKey = original.ConnectionSharedKey
type DhcpOptions = original.DhcpOptions
type DNSNameAvailabilityResult = original.DNSNameAvailabilityResult
type Error = original.Error
type ErrorDetails = original.ErrorDetails
type ExpressRouteCircuit = original.ExpressRouteCircuit
type ExpressRouteCircuitArpTable = original.ExpressRouteCircuitArpTable
type ExpressRouteCircuitAuthorization = original.ExpressRouteCircuitAuthorization
type ExpressRouteCircuitListResult = original.ExpressRouteCircuitListResult
type ExpressRouteCircuitPeering = original.ExpressRouteCircuitPeering
type ExpressRouteCircuitPeeringConfig = original.ExpressRouteCircuitPeeringConfig
type ExpressRouteCircuitPeeringListResult = original.ExpressRouteCircuitPeeringListResult
type ExpressRouteCircuitPeeringPropertiesFormat = original.ExpressRouteCircuitPeeringPropertiesFormat
type ExpressRouteCircuitPropertiesFormat = original.ExpressRouteCircuitPropertiesFormat
type ExpressRouteCircuitRoutesTable = original.ExpressRouteCircuitRoutesTable
type ExpressRouteCircuitsArpTableListResult = original.ExpressRouteCircuitsArpTableListResult
type ExpressRouteCircuitServiceProviderProperties = original.ExpressRouteCircuitServiceProviderProperties
type ExpressRouteCircuitSku = original.ExpressRouteCircuitSku
type ExpressRouteCircuitsRoutesTableListResult = original.ExpressRouteCircuitsRoutesTableListResult
type ExpressRouteCircuitsStatsListResult = original.ExpressRouteCircuitsStatsListResult
type ExpressRouteCircuitStats = original.ExpressRouteCircuitStats
type ExpressRouteServiceProvider = original.ExpressRouteServiceProvider
type ExpressRouteServiceProviderBandwidthsOffered = original.ExpressRouteServiceProviderBandwidthsOffered
type ExpressRouteServiceProviderListResult = original.ExpressRouteServiceProviderListResult
type ExpressRouteServiceProviderPropertiesFormat = original.ExpressRouteServiceProviderPropertiesFormat
type FrontendIPConfiguration = original.FrontendIPConfiguration
type FrontendIPConfigurationPropertiesFormat = original.FrontendIPConfigurationPropertiesFormat
type InboundNatPool = original.InboundNatPool
type InboundNatPoolPropertiesFormat = original.InboundNatPoolPropertiesFormat
type InboundNatRule = original.InboundNatRule
type InboundNatRulePropertiesFormat = original.InboundNatRulePropertiesFormat
type Interface = original.Interface
type InterfaceDNSSettings = original.InterfaceDNSSettings
type InterfaceIPConfiguration = original.InterfaceIPConfiguration
type InterfaceIPConfigurationPropertiesFormat = original.InterfaceIPConfigurationPropertiesFormat
type InterfaceListResult = original.InterfaceListResult
type InterfacePropertiesFormat = original.InterfacePropertiesFormat
type LoadBalancer = original.LoadBalancer
type LoadBalancerListResult = original.LoadBalancerListResult
type LoadBalancerPropertiesFormat = original.LoadBalancerPropertiesFormat
type LoadBalancingRule = original.LoadBalancingRule
type LoadBalancingRulePropertiesFormat = original.LoadBalancingRulePropertiesFormat
type LocalNetworkGateway = original.LocalNetworkGateway
type LocalNetworkGatewayListResult = original.LocalNetworkGatewayListResult
type LocalNetworkGatewayPropertiesFormat = original.LocalNetworkGatewayPropertiesFormat
type OutboundNatRule = original.OutboundNatRule
type OutboundNatRulePropertiesFormat = original.OutboundNatRulePropertiesFormat
type Probe = original.Probe
type ProbePropertiesFormat = original.ProbePropertiesFormat
type PublicIPAddress = original.PublicIPAddress
type PublicIPAddressDNSSettings = original.PublicIPAddressDNSSettings
type PublicIPAddressListResult = original.PublicIPAddressListResult
type PublicIPAddressPropertiesFormat = original.PublicIPAddressPropertiesFormat
type Resource = original.Resource
type Route = original.Route
type RouteListResult = original.RouteListResult
type RoutePropertiesFormat = original.RoutePropertiesFormat
type RouteTable = original.RouteTable
type RouteTableListResult = original.RouteTableListResult
type RouteTablePropertiesFormat = original.RouteTablePropertiesFormat
type SecurityGroup = original.SecurityGroup
type SecurityGroupListResult = original.SecurityGroupListResult
type SecurityGroupPropertiesFormat = original.SecurityGroupPropertiesFormat
type SecurityRule = original.SecurityRule
type SecurityRuleListResult = original.SecurityRuleListResult
type SecurityRulePropertiesFormat = original.SecurityRulePropertiesFormat
type Subnet = original.Subnet
type SubnetListResult = original.SubnetListResult
type SubnetPropertiesFormat = original.SubnetPropertiesFormat
type SubResource = original.SubResource
type Usage = original.Usage
type UsageName = original.UsageName
type UsagesListResult = original.UsagesListResult
type VirtualNetwork = original.VirtualNetwork
type VirtualNetworkGateway = original.VirtualNetworkGateway
type VirtualNetworkGatewayConnection = original.VirtualNetworkGatewayConnection
type VirtualNetworkGatewayConnectionListResult = original.VirtualNetworkGatewayConnectionListResult
type VirtualNetworkGatewayConnectionPropertiesFormat = original.VirtualNetworkGatewayConnectionPropertiesFormat
type VirtualNetworkGatewayIPConfiguration = original.VirtualNetworkGatewayIPConfiguration
type VirtualNetworkGatewayIPConfigurationPropertiesFormat = original.VirtualNetworkGatewayIPConfigurationPropertiesFormat
type VirtualNetworkGatewayListResult = original.VirtualNetworkGatewayListResult
type VirtualNetworkGatewayPropertiesFormat = original.VirtualNetworkGatewayPropertiesFormat
type VirtualNetworkListResult = original.VirtualNetworkListResult
type VirtualNetworkPropertiesFormat = original.VirtualNetworkPropertiesFormat
type SecurityRulesClient = original.SecurityRulesClient
type UsagesClient = original.UsagesClient
type VirtualNetworkGatewaysClient = original.VirtualNetworkGatewaysClient
type LocalNetworkGatewaysClient = original.LocalNetworkGatewaysClient
type PublicIPAddressesClient = original.PublicIPAddressesClient
type VirtualNetworkGatewayConnectionsClient = original.VirtualNetworkGatewayConnectionsClient
type VirtualNetworksClient = original.VirtualNetworksClient

func NewLoadBalancersClient(subscriptionID string) LoadBalancersClient {
	return original.NewLoadBalancersClient(subscriptionID)
}
func NewLoadBalancersClientWithBaseURI(baseURI string, subscriptionID string) LoadBalancersClient {
	return original.NewLoadBalancersClientWithBaseURI(baseURI, subscriptionID)
}
func New(subscriptionID string) ManagementClient {
	return original.New(subscriptionID)
}
func NewWithBaseURI(baseURI string, subscriptionID string) ManagementClient {
	return original.NewWithBaseURI(baseURI, subscriptionID)
}
func NewExpressRouteCircuitAuthorizationsClient(subscriptionID string) ExpressRouteCircuitAuthorizationsClient {
	return original.NewExpressRouteCircuitAuthorizationsClient(subscriptionID)
}
func NewExpressRouteCircuitAuthorizationsClientWithBaseURI(baseURI string, subscriptionID string) ExpressRouteCircuitAuthorizationsClient {
	return original.NewExpressRouteCircuitAuthorizationsClientWithBaseURI(baseURI, subscriptionID)
}
func NewExpressRouteCircuitsClient(subscriptionID string) ExpressRouteCircuitsClient {
	return original.NewExpressRouteCircuitsClient(subscriptionID)
}
func NewExpressRouteCircuitsClientWithBaseURI(baseURI string, subscriptionID string) ExpressRouteCircuitsClient {
	return original.NewExpressRouteCircuitsClientWithBaseURI(baseURI, subscriptionID)
}
func NewInterfacesClient(subscriptionID string) InterfacesClient {
	return original.NewInterfacesClient(subscriptionID)
}
func NewInterfacesClientWithBaseURI(baseURI string, subscriptionID string) InterfacesClient {
	return original.NewInterfacesClientWithBaseURI(baseURI, subscriptionID)
}
func NewSecurityRulesClient(subscriptionID string) SecurityRulesClient {
	return original.NewSecurityRulesClient(subscriptionID)
}
func NewSecurityRulesClientWithBaseURI(baseURI string, subscriptionID string) SecurityRulesClient {
	return original.NewSecurityRulesClientWithBaseURI(baseURI, subscriptionID)
}
func NewUsagesClient(subscriptionID string) UsagesClient {
	return original.NewUsagesClient(subscriptionID)
}
func NewUsagesClientWithBaseURI(baseURI string, subscriptionID string) UsagesClient {
	return original.NewUsagesClientWithBaseURI(baseURI, subscriptionID)
}
func UserAgent() string {
	return original.UserAgent()
}
func Version() string {
	return original.Version()
}
func NewVirtualNetworkGatewaysClient(subscriptionID string) VirtualNetworkGatewaysClient {
	return original.NewVirtualNetworkGatewaysClient(subscriptionID)
}
func NewVirtualNetworkGatewaysClientWithBaseURI(baseURI string, subscriptionID string) VirtualNetworkGatewaysClient {
	return original.NewVirtualNetworkGatewaysClientWithBaseURI(baseURI, subscriptionID)
}
func NewLocalNetworkGatewaysClient(subscriptionID string) LocalNetworkGatewaysClient {
	return original.NewLocalNetworkGatewaysClient(subscriptionID)
}
func NewLocalNetworkGatewaysClientWithBaseURI(baseURI string, subscriptionID string) LocalNetworkGatewaysClient {
	return original.NewLocalNetworkGatewaysClientWithBaseURI(baseURI, subscriptionID)
}
func NewPublicIPAddressesClient(subscriptionID string) PublicIPAddressesClient {
	return original.NewPublicIPAddressesClient(subscriptionID)
}
func NewPublicIPAddressesClientWithBaseURI(baseURI string, subscriptionID string) PublicIPAddressesClient {
	return original.NewPublicIPAddressesClientWithBaseURI(baseURI, subscriptionID)
}
func NewVirtualNetworkGatewayConnectionsClient(subscriptionID string) VirtualNetworkGatewayConnectionsClient {
	return original.NewVirtualNetworkGatewayConnectionsClient(subscriptionID)
}
func NewVirtualNetworkGatewayConnectionsClientWithBaseURI(baseURI string, subscriptionID string) VirtualNetworkGatewayConnectionsClient {
	return original.NewVirtualNetworkGatewayConnectionsClientWithBaseURI(baseURI, subscriptionID)
}
func NewVirtualNetworksClient(subscriptionID string) VirtualNetworksClient {
	return original.NewVirtualNetworksClient(subscriptionID)
}
func NewVirtualNetworksClientWithBaseURI(baseURI string, subscriptionID string) VirtualNetworksClient {
	return original.NewVirtualNetworksClientWithBaseURI(baseURI, subscriptionID)
}
func NewRouteTablesClient(subscriptionID string) RouteTablesClient {
	return original.NewRouteTablesClient(subscriptionID)
}
func NewRouteTablesClientWithBaseURI(baseURI string, subscriptionID string) RouteTablesClient {
	return original.NewRouteTablesClientWithBaseURI(baseURI, subscriptionID)
}
func NewSecurityGroupsClient(subscriptionID string) SecurityGroupsClient {
	return original.NewSecurityGroupsClient(subscriptionID)
}
func NewSecurityGroupsClientWithBaseURI(baseURI string, subscriptionID string) SecurityGroupsClient {
	return original.NewSecurityGroupsClientWithBaseURI(baseURI, subscriptionID)
}
func NewSubnetsClient(subscriptionID string) SubnetsClient {
	return original.NewSubnetsClient(subscriptionID)
}
func NewSubnetsClientWithBaseURI(baseURI string, subscriptionID string) SubnetsClient {
	return original.NewSubnetsClientWithBaseURI(baseURI, subscriptionID)
}
func NewApplicationGatewaysClient(subscriptionID string) ApplicationGatewaysClient {
	return original.NewApplicationGatewaysClient(subscriptionID)
}
func NewApplicationGatewaysClientWithBaseURI(baseURI string, subscriptionID string) ApplicationGatewaysClient {
	return original.NewApplicationGatewaysClientWithBaseURI(baseURI, subscriptionID)
}
func NewExpressRouteCircuitPeeringsClient(subscriptionID string) ExpressRouteCircuitPeeringsClient {
	return original.NewExpressRouteCircuitPeeringsClient(subscriptionID)
}
func NewExpressRouteCircuitPeeringsClientWithBaseURI(baseURI string, subscriptionID string) ExpressRouteCircuitPeeringsClient {
	return original.NewExpressRouteCircuitPeeringsClientWithBaseURI(baseURI, subscriptionID)
}
func NewExpressRouteServiceProvidersClient(subscriptionID string) ExpressRouteServiceProvidersClient {
	return original.NewExpressRouteServiceProvidersClient(subscriptionID)
}
func NewExpressRouteServiceProvidersClientWithBaseURI(baseURI string, subscriptionID string) ExpressRouteServiceProvidersClient {
	return original.NewExpressRouteServiceProvidersClientWithBaseURI(baseURI, subscriptionID)
}
func NewRoutesClient(subscriptionID string) RoutesClient {
	return original.NewRoutesClient(subscriptionID)
}
func NewRoutesClientWithBaseURI(baseURI string, subscriptionID string) RoutesClient {
	return original.NewRoutesClientWithBaseURI(baseURI, subscriptionID)
}
